<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Flavio Franzin</title>
    <link>https://ffranzin.github.io/</link>
    <description>Recent content in Home on Flavio Franzin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <lastBuildDate>Sat, 10 Feb 2018 18:56:13 -0500</lastBuildDate><atom:link href="https://ffranzin.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Raster-based Approach for Waterbodies Mesh Generation</title>
      <link>https://ffranzin.github.io/publications/a-raster-based-approach-for-waterbodies-mesh-generation/</link>
      <pubDate>Fri, 08 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ffranzin.github.io/publications/a-raster-based-approach-for-waterbodies-mesh-generation/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Accurate Real-time Physics Simulation for Large Worlds</title>
      <link>https://ffranzin.github.io/publications/accurate-real-time-physics-simulation-for-large-worlds/</link>
      <pubDate>Fri, 08 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ffranzin.github.io/publications/accurate-real-time-physics-simulation-for-large-worlds/</guid>
      <description></description>
    </item>
    
    <item>
      <title>GPU-Based Rendering and Collision Simulation of Ground Vegetation in Large-Scace Virtual Scenarios</title>
      <link>https://ffranzin.github.io/publications/gpu-based-rendering-and-collision-simulation-of-ground-vegetation-in-large-scace-virtual-scenarios/</link>
      <pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ffranzin.github.io/publications/gpu-based-rendering-and-collision-simulation-of-ground-vegetation-in-large-scace-virtual-scenarios/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Procedural Editing of Virtual Terrains Using 3D Bezier Curves</title>
      <link>https://ffranzin.github.io/publications/procedural-editing-of-virtual-terrains-using-3d-bezier-curves/</link>
      <pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ffranzin.github.io/publications/procedural-editing-of-virtual-terrains-using-3d-bezier-curves/</guid>
      <description></description>
    </item>
    
    <item>
      <title>GPU-Based Real-Time Procedural Distribution of Vegetation On Large-Scale Virtual Terrains</title>
      <link>https://ffranzin.github.io/publications/gpu-based-real-time-procedural-distribution-of-vegetation-on-large-scale-virtual-terrains/</link>
      <pubDate>Thu, 08 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ffranzin.github.io/publications/gpu-based-real-time-procedural-distribution-of-vegetation-on-large-scale-virtual-terrains/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Uma Framework para distribuicao, gerenciamento e renderizacao de vegetacao em cenarios virtuais massivos em tempo real</title>
      <link>https://ffranzin.github.io/publications/uma-framework-para-distribuicao-gerenciamento-e-renderizacao-de-vegetacao-em-cenarios-virtuais-massivos-em-tempo-real/</link>
      <pubDate>Thu, 08 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ffranzin.github.io/publications/uma-framework-para-distribuicao-gerenciamento-e-renderizacao-de-vegetacao-em-cenarios-virtuais-massivos-em-tempo-real/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Home</title>
      <link>https://ffranzin.github.io/_index-copy/</link>
      <pubDate>Sat, 10 Feb 2018 18:56:13 -0500</pubDate>
      
      <guid>https://ffranzin.github.io/_index-copy/</guid>
      <description>.container { display: table; width: 100%; float: left; } .container div { display: table-cell; } * { box-sizing: border-box; } /* Create three equal columns that floats next to each other */ .column { float: left; width: 33%; padding: 10px; height: 300px; /* Should be removed. Only for demonstration */ } /* Clear floats after the columns */ .row:after { content: &#34;&#34;; display: table; clear: both; }  I entered the game industry as a 3D modeler, knowledge which I got as a hobby/curiosity.</description>
    </item>
    
    <item>
      <title>Aplicacao de tecnicas procedurais em GPU para renderizacao de nuvens volumetricas em tempo real</title>
      <link>https://ffranzin.github.io/publications/aplica%C3%A7%C3%A3o-de-t%C3%A9cnicas-procedurais-em-gpu-para-renderiza%C3%A7%C3%A3o-de-nuvens-volum%C3%A9tricas-em-tempo-real/</link>
      <pubDate>Wed, 08 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ffranzin.github.io/publications/aplica%C3%A7%C3%A3o-de-t%C3%A9cnicas-procedurais-em-gpu-para-renderiza%C3%A7%C3%A3o-de-nuvens-volum%C3%A9tricas-em-tempo-real/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Using Active Mediators and Passive Extractors Inside Materialized Data Integration Systems</title>
      <link>https://ffranzin.github.io/publications/using-active-mediators-and-passive-extractors-inside-materialized-data-integration-systems/</link>
      <pubDate>Tue, 08 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://ffranzin.github.io/publications/using-active-mediators-and-passive-extractors-inside-materialized-data-integration-systems/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Forcing Visits to use SSL</title>
      <link>https://ffranzin.github.io/blog/force-ssl/</link>
      <pubDate>Thu, 01 Jan 2009 14:09:10 +0000</pubDate>
      
      <guid>https://ffranzin.github.io/blog/force-ssl/</guid>
      <description>Intro Doesn&amp;rsquo;t matter whether it&amp;rsquo;s a CakePHP app for a client, your own personal CMS, or any other web based application. If your passing around passwords or other sensitive info you should really implement SSL. SSL provides 2 main perks to your visitors.
 First it encrypts all communication that flies across the web. This prevents curious or devious billies from getting your secrets. Secondly it ensures to the user that your server is in fact who it claims, and not a nasty &amp;lsquo;man in the middle&amp;quot; attack.</description>
    </item>
    
    <item>
      <title>Art and tech-art</title>
      <link>https://ffranzin.github.io/projects/creations/art-and-tech-art/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ffranzin.github.io/projects/creations/art-and-tech-art/</guid>
      <description>* { box-sizing: border-box; } .img-container-x4 { float: left; width: 25%; padding: 1px; } .img-container-x4:hover img { float: left; width: 150%; padding: 1px; } .clearfix::after { content: &#34;&#34;; clear: both; display: table; }  
Mossberg
     
Granade Launcher L79
      
Barrett m107
 
Flamethrower
      
BBS-CM</description>
    </item>
    
    <item>
      <title>Break Glass</title>
      <link>https://ffranzin.github.io/projects/creations/breaking-glass/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ffranzin.github.io/projects/creations/breaking-glass/</guid>
      <description>.center { display: block; margin-left: auto; margin-right: auto; max-width: 95%; } .row { display: flex; margin-left: auto; margin-right: auto; max-width: 95%; } .column { flex: 25%; padding: 2px; } video { width: 70%; height: auto; display: block; margin-left: auto; margin-right: auto; } #player-overlay { position: absolute; display: none; top: 0; left: 0; width: 100%; height: 100%; background-color: #000 z-index:999; }  I prototyped two solutions to break glass.</description>
    </item>
    
    <item>
      <title>Game Assets Optimizations</title>
      <link>https://ffranzin.github.io/projects/creations/game-assets-optimizations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ffranzin.github.io/projects/creations/game-assets-optimizations/</guid>
      <description>* { box-sizing: border-box; } .img-container { float: left; width: 49%; padding: 2px; } .clearfix::after { content: &#34;&#34;; clear: both; display: table; } .center { display: block; margin-left: auto; margin-right: auto; max-width: 70%; } #vertical-line { float: left; height: 500px; width: 1px; background-color: black; } .vertical-line { border-right:1px solid #000; }  I encouraged managers and guided artists in optimizing 3D assets and game scenarios to create real-time cutscenes, avoiding several days of rendering after changes.</description>
    </item>
    
    <item>
      <title>Game Optimizations</title>
      <link>https://ffranzin.github.io/projects/creations/game-optimizations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ffranzin.github.io/projects/creations/game-optimizations/</guid>
      <description>* { box-sizing: border-box; } .video-container { float: left; width: 50%; padding: 2px; } .clearfix::after { content: &#34;&#34;; clear: both; display: table; } .center { display: block; margin-left: auto; margin-right: auto; max-width: 50%; } video { width: 99%; height: auto; display: block; margin-left: auto; margin-right: auto; }  New requirements significantly increased the number of simulated game entities, putting the game at a critical stage in terms of performance. In this context, I took responsibility for investigating and fixing performance bottlenecks.</description>
    </item>
    
    <item>
      <title>Grass Deformation and Terrain Trails</title>
      <link>https://ffranzin.github.io/projects/creations/grass-and-terrain-deformation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ffranzin.github.io/projects/creations/grass-and-terrain-deformation/</guid>
      <description>* { box-sizing: border-box; } .img-container { float: left; width: 25%; padding: 2px; } .video-container { float: left; width: 50%; padding: 2px; } .clearfix::after { content: &#34;&#34;; clear: both; display: table; } .center { display: block; margin-left: auto; margin-right: auto; max-width: 50%; }  I developed a solution for the real-time long-lasting grasses deformation and terrain trails according to the vehicles&#39; and characters&#39; movements. This is kept throughout the simulation with little memory overhead.</description>
    </item>
    
    <item>
      <title>Procedural Bridge System</title>
      <link>https://ffranzin.github.io/projects/creations/procedural-bridge-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ffranzin.github.io/projects/creations/procedural-bridge-system/</guid>
      <description>* { box-sizing: border-box; } .img-container-x4 { float: left; width: 25%; padding: 1px; } .img-container-x4:hover img { float: left; width: 150%; padding: 1px; } .clearfix::after { content: &#34;&#34;; clear: both; display: table; } .center { display: block; margin-left: auto; margin-right: auto; max-width: 85%; }  I modeled a set of 3D bridges parts to compose a procedural bridge system, instantiated in the scenario based on a starting and an ending point.</description>
    </item>
    
    <item>
      <title>Procedural Vegetation System</title>
      <link>https://ffranzin.github.io/projects/creations/procedural-vegetation-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ffranzin.github.io/projects/creations/procedural-vegetation-system/</guid>
      <description>* { box-sizing: border-box; } .img-container-x4 { float: left; width: 33%; padding: 1px; } .img-container-x4:hover img { float: left; width: 150%; padding: 1px; } .clearfix::after { content: &#34;&#34;; clear: both; display: table; } video { width: 70%; height: auto; display: block; margin-left: auto; margin-right: auto; }  To solve the limitations of an existing solution, I designed and developed a robust GPU-based vegetation system capable of handling thousands of trees and small plants efficiently in real-time.</description>
    </item>
    
    <item>
      <title>Search Results</title>
      <link>https://ffranzin.github.io/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ffranzin.github.io/search/</guid>
      <description>This file exists solely to respond to /search URL with the related search layout template.
No content shown here is rendered, all content is based in the template layouts/page/search.html
Setting a very low sitemap priority will tell search engines this is not important content.
This implementation uses Fusejs, jquery and mark.js
Initial setup Search depends on additional output content type of JSON in config.toml
[outputs] home = [&amp;#34;HTML&amp;#34;, &amp;#34;JSON&amp;#34;] Searching additional fileds To search additional fields defined in front matter, you must add it in 2 places.</description>
    </item>
    
    <item>
      <title>Vector Data Access Optimization</title>
      <link>https://ffranzin.github.io/projects/creations/vector-feature-map/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ffranzin.github.io/projects/creations/vector-feature-map/</guid>
      <description>video { width: 70%; height: auto; display: block; margin-left: auto; margin-right: auto; } #player-overlay { position: absolute; display: none; top: 0; left: 0; width: 100%; height: 100%; background-color: #000 z-index:999; }  I developed a dynamic structure to optimize access to mass datasets of polygons and polylines, representing areas like forests, lakes, roads, and rivers. This structure accelerated the terrain rendering ーwhich these data are projected by texturingー by +80% on average.</description>
    </item>
    
    <item>
      <title>Water planes mesh generation</title>
      <link>https://ffranzin.github.io/projects/creations/water-bodies-meshes-generation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ffranzin.github.io/projects/creations/water-bodies-meshes-generation/</guid>
      <description>.center { display: block; margin-left: auto; margin-right: auto; max-width: 95%; } .row { display: flex; margin-left: auto; margin-right: auto; max-width: 95%; } .column { flex: 25%; padding: 2px; }  I designed and guided an intern in developing a tool to generate polygonal meshes from mass polygons and polylines datasets, used to represent water planes for lakes and rivers in 3D scenarios.

Description
This tool was developed to replace an old solution, which had problems with the scalability between junctions of entities, such as river-river (line-line, in the left), rivers-rivers (lines-lines, in the middle), and river-lake (line-polygon, in the right).</description>
    </item>
    
  </channel>
</rss>
