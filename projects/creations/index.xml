<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects and Main Achievements on Flavio Franzin</title>
    <link>/projects/creations/</link>
    <description>Recent content in Projects and Main Achievements on Flavio Franzin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <lastBuildDate>Tue, 07 Jan 2020 15:00:28 +0000</lastBuildDate><atom:link href="/projects/creations/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Break Glass</title>
      <link>/projects/creations/breaking-glass/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/creations/breaking-glass/</guid>
      <description>.center { display: block; margin-left: auto; margin-right: auto; max-width: 95%; } .row { display: flex; margin-left: auto; margin-right: auto; max-width: 95%; } .column { flex: 33.33%; padding: 2px; } video { width: 100%; height: auto; display: block; margin-left: auto; margin-right: auto; } #player-overlay { position: absolute; display: none; top: 0; left: 0; width: 100%; height: 100%; background-color: #000; z-index: 999; }  I prototyped two solutions for glass-breaking simulation.</description>
    </item>
    
    <item>
      <title>Facial Recognition Optimization</title>
      <link>/projects/creations/facematch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/creations/facematch/</guid>
      <description>* { box-sizing: border-box; } .img-container-x4 { float: left; width: 25%; padding: 1px; } .note { font-size: 13px; } .img-container-x4:hover img { float: left; width: 150%; padding: 1px; } .clearfix::after { content: &#34;&#34;; clear: both; display: table; }  I proposed and improved a feature that compares millions of human faces to use GPU power, reducing the processing time from days to minutes.

Description
I recently made a breakthrough in the field of face recognition technology by migrating a feature that was previously limited to CPU to GPU processing.</description>
    </item>
    
    <item>
      <title>Game Optimizations</title>
      <link>/projects/creations/game-optimizations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/creations/game-optimizations/</guid>
      <description>* { box-sizing: border-box; } .video-container { float: left; width: 50%; padding: 2px; } .clearfix::after { content: &#34;&#34;; clear: both; display: table; } .center { display: block; margin-left: auto; margin-right: auto; max-width: 50%; } video { width: 95%; height: auto; display: block; margin-left: auto; margin-right: auto; }  The client&amp;rsquo;s new requirements added numerous game entities, drastically impacting the game&amp;rsquo;s performance. In this context, for four months, I focused on investigating and fixing performance bottlenecks, improving the game&amp;rsquo;s scalability, and bringing its performance to acceptable levels again.</description>
    </item>
    
    <item>
      <title>Grass Deformation</title>
      <link>/projects/creations/grass-and-terrain-deformation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/creations/grass-and-terrain-deformation/</guid>
      <description>* { box-sizing: border-box; } .img-container { float: left; width: 25%; padding: 2px; } .video-container { float: left; width: 50%; padding: 2px; } .clearfix::after { content: &#34;&#34;; clear: both; display: table; } .center { display: block; margin-left: auto; margin-right: auto; max-width: 50%; }  I developed a solution for the real-time long-lasting grass deformation according to the vehicles&#39; and characters&#39; movements.
In real-world battlefields, vehicle tracks are dangerous as they can reveal position to enemies.</description>
    </item>
    
    <item>
      <title>Modeling (Blender)</title>
      <link>/projects/creations/blender_modeling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/creations/blender_modeling/</guid>
      <description>* { box-sizing: border-box; } .img-container-x4 { float: left; width: 33%; padding: 1px; } .img-container-x4:hover img { float: left; width: 150%; padding: 1px; } .clearfix::after { content: &#34;&#34;; clear: both; display: table; }  Some results that I achieved using Blender, purely for educational purposes and to explore the tool&amp;rsquo;s potentials.

M107
    
Flamethrower
    
Mossberg</description>
    </item>
    
    <item>
      <title>Procedural 3D - Houdini</title>
      <link>/projects/creations/houdini/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/creations/houdini/</guid>
      <description> * { box-sizing: border-box; } .img-container-x4 { float: left; width: 25%; padding: 1px; } .img-container-x4:hover img { float: left; width: 150%; padding: 1px; } .clearfix::after { content: &#34;&#34;; clear: both; display: table; }  Some results that I achieved using Houdini, purely for educational purposes and to explore the tool&amp;rsquo;s potentials.

Dusty terrain
   
Fiery terrain
  
Irregular Ground stone
 </description>
    </item>
    
    <item>
      <title>Procedural Bridge System</title>
      <link>/projects/creations/procedural-bridge-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/creations/procedural-bridge-system/</guid>
      <description>* { box-sizing: border-box; } .img-container-x3 { float: left; width: 33%; padding: 1px; } .img-container-x1 { float: left; width: 49.5%; padding: 1px; } .img-container-x3:hover img { float: left; width: 150%; padding: 1px; } .img-container-x1:hover img { float: left; width: 150%; padding: 1px; } .clearfix::after { content: &#34;&#34;; clear: both; display: table; } .center { display: block; margin-left: auto; margin-right: auto; max-width: 85%; } .left-arrow-container { display: flex; align-items: center; justify-content: center; } .</description>
    </item>
    
    <item>
      <title>Procedural Materials - Substance Designer</title>
      <link>/projects/creations/substance_designer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/creations/substance_designer/</guid>
      <description>* { box-sizing: border-box; } .img-container-x4 { float: left; width: 25%; padding: 1px; } .img-container-x4:hover img { float: left; width: 150%; padding: 1px; } .clearfix::after { content: &#34;&#34;; clear: both; display: table; }  Some materials created with Substance Designer, primarily focused on learning the tool and also furthering my proficiency in procedural generation.

Aged Wood
    
Muddy with Trails</description>
    </item>
    
    <item>
      <title>Procedural Vegetation System</title>
      <link>/projects/creations/procedural-vegetation-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/creations/procedural-vegetation-system/</guid>
      <description>* { box-sizing: border-box; } .img-container-x4 { float: left; width: 33%; padding: 1px; } .img-container-x4:hover img { float: left; width: 150%; padding: 1px; } .clearfix::after { content: &#34;&#34;; clear: both; display: table; } video { width: 70%; height: auto; display: block; margin-left: auto; margin-right: auto; }  I designed and developed a robust GPU-based vegetation system capable of handling thousands of plants efficiently in real-time.

Description
In small environments, the decoration is typically handled by artists or designers, enabling precise control and aesthetically pleasing results.</description>
    </item>
    
    <item>
      <title>Sculpting (ZBrush)</title>
      <link>/projects/creations/zbrush_sculpting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/creations/zbrush_sculpting/</guid>
      <description> * { box-sizing: border-box; } .img-container-x4 { float: left; width: 33%; padding: 1px; } .img-container-x4:hover img { float: left; width: 150%; padding: 1px; } .clearfix::after { content: &#34;&#34;; clear: both; display: table; }  Some results that I achieved using ZBrush, purely for educational purposes and to explore the tool&amp;rsquo;s potentials.
Octopus
    
Pumpkin Head
    
Sword
   </description>
    </item>
    
    <item>
      <title>Vector Data Access Optimization</title>
      <link>/projects/creations/vector-feature-map/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/creations/vector-feature-map/</guid>
      <description>video { width: 70%; height: auto; display: block; margin-left: auto; margin-right: auto; } #player-overlay { position: absolute; display: none; top: 0; left: 0; width: 100%; height: 100%; background-color: #000 z-index:999; }  I developed a dynamic data structure to optimize access to mass datasets of polygons and polylines. This structure accelerated terrain rendering by an average of +80%.
In military simulations, mass GIS (Geographic Information System) datasets are a common resource used to represent features like forests, lakes, roads, and rivers through polygons and polylines.</description>
    </item>
    
    <item>
      <title>Vehicles creation - 3D artist</title>
      <link>/projects/creations/astros_vehicles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/creations/astros_vehicles/</guid>
      <description> * { box-sizing: border-box; } .img-container-x4 { float: left; width: 49%; padding: 1px; } .img-container-x4:hover img { float: left; width: 150%; padding: 1px; } .clearfix::after { content: &#34;&#34;; clear: both; display: table; }   Full creation of low-poly vehicles constituting the Brazilian Astros II (Artillery SaTuration ROcket System) battery.
 3D Modeling: Blender UV Unwrapping: Blender Level of Details (LOD): Blender (Decimate tool) Texturing: Substance Painter Bake: Blender (Normal and Ambient Occlusion map) Real-time dynamic animation: Code  Antennas (Blend shapes and C#) Mechanical arm (Inverse kinematics with C#) Leveling pistons (C#) Tailgate (C#)                 </description>
    </item>
    
    <item>
      <title>Volumetric Procedural Clouds</title>
      <link>/projects/creations/clouds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/creations/clouds/</guid>
      <description>* { box-sizing: border-box; } .img-container-x4 { float: left; width: 49%; padding: 1px; } .img-container-x4:hover img { float: left; width: 150%; padding: 1px; } .clearfix::after { content: &#34;&#34;; clear: both; display: table; } video { width: 70%; height: auto; display: block; margin-left: auto; margin-right: auto; }  I created a volumetric procedural clouds using the ray-marching technique.

Description
I developed a real-time volumetric cloud rendering solution using ray-marching technique for my BSc project inspired by the Guerrilla team&amp;rsquo;s proposal.</description>
    </item>
    
    <item>
      <title>Water planes mesh generation</title>
      <link>/projects/creations/water-bodies-meshes-generation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/creations/water-bodies-meshes-generation/</guid>
      <description>.center { display: block; margin-left: auto; margin-right: auto; max-width: 95%; } .row { display: flex; margin-left: auto; margin-right: auto; max-width: 95%; } .column { flex: 25%; padding: 2px; }  I designed and guided an intern in developing a tool to generate polygonal meshes from mass polygons and polylines datasets, representing rivers (lines) and lakes (polygons) in large-scale scenarios.

Description
The purpose of this tool is to replace an outdated solution that struggled with scalability issues at entity junctions, such as river-river (line-line, on the left), rivers-rivers (lines-lines, in the middle), and river-lake (line-polygon, on the right).</description>
    </item>
    
  </channel>
</rss>
